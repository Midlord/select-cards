{
  "name": "Select-cards",
  "tagline": "Convert <select> element to Semantic UI cards",
  "body": "# select-cards.js\r\n\r\nTurn your plain `<select>` elements in to Semantic UI's Cards component.\r\n\r\n## Dependencies\r\n- jQuery\r\n- FontAwesome\r\n- Semantic UI Card Css\r\n- Semantic UI Button Css\r\n- Semantic UI Label CSS\r\n\r\nIn case you don't want to load another files, then just copy their code.\r\nActually, there's a reason Semantic UI splitted their assets. You can find them on CDNs like cdnjs.com\r\n\r\n## Options\r\n###### See Semantic UI's documentation for available classes\r\n=======\r\n\r\n| Name | Type |\tDefault |\tDescription |\r\n| ---- |:----:|:-------:|:----------- |\r\n| addLabelColor | string | 'green' | Added label color |\r\n| addLabelPosition | string | 'right' | Added label position |\r\n| buttonColor | string | 'positive' | Add button color |\r\n| addLabel | string | 'Add' | Add button label |\r\n| removeLabel |string|'Remove'| Remove button label|\r\n| cardPerSlide | int | 4 | Number of cards to show per page |\r\n| slideBy | int | 1 | Number of cards to slide by after clicking next button |\r\n| maxItems | int | 4 | Uses cardPerSlide value as default. This is useful if remote option is needed|\r\n| remote | string | false | Url on where to fetch more options |\r\n| nextButton | string| none | Specify a selector for next button |\r\n| prevButton | string | none| Specify a selector for previous button|\r\n\r\n## Callbacks\r\n###### Available callbacks currently\r\n=======\r\n| Name | Description |\tParameter |\r\n| ---- |:----:|:-------:|\r\n| onInitialize| You can do stuffs here after the plugin has been initialize | none|\r\n| onFetch | What to do with the response after fetching | API response |\r\n\r\n```\r\n// Example\r\nselectCards({\r\n    onFetch: function(){},\r\n    onInitialize: function(){}\r\n});\r\n```\r\n\r\n## Usage\r\n=======\r\n\r\n```\r\n<div>\r\n    <select id=\"example\">\r\n        <option value=\"1\" data-img=\"/img/example.png\">Exapmle Text</option>\r\n    </select>\r\n    <button type=\"button\" id=\"prevbtn\">Previous<button>\r\n    <button type=\"button\" id=\"nextbtn\">Next<button>\r\n</div>\r\n    \r\nvar selectCards = $('#example').selectCards({\r\n    nextButton:'#nextbtn',\r\n    previousButton: '#prevbtn'\r\n});\r\n\r\n// Next Slide\r\n$('#nextbtn').on('click', function(){\r\n    selectCards.next();\r\n});\r\n\r\n// Previous Slide\r\n$('#prevtbtn').on('click', function(){\r\n    selectCards.previous();\r\n});\r\n\r\n// Responsive helper / Modal Usage just use refreshWidth().\r\n// Example:\r\n\r\n$modal.on('modal.show.event', function(){\r\n    selectCards.refreshWidth();\r\n});\r\n\r\n$(window).on('resize', function(){\r\n    refreshWidth();\r\n});\r\n\r\n// Reset. Remove all active.\r\n// In case you need to reset the form, select values might be reset\r\n// but the cards are not aware of this.\r\n\r\nselectCards.reset();\r\n\r\n// Manually Select A Value\r\nselectCards.toggle(value)\r\n\r\n```\r\n\r\n<b>NOTE:</b>\r\nIf the toggled value is not yet on the list and `remote` option is enabled, it will be placed on the `pending` lists and once that item is fetched it will automatically be selected and will be removed from the pending list\r\n\r\n<b>Important: </b> Items on pending list will not be added on the hidden `select` which means, if you submitted the form while that card/option is not yet fetched, that pending item will not be submitted. Will see if a fix is needed. Haven't found any reason yet.\r\n\r\n\r\n## Remote\r\n=======\r\n\r\nIf remote option is wanted, please specify a value for the `maxItems` as the maximum number of items that can be fetched from the API (example: max row count).\r\n\r\nIf you already have a working `search` API, the plugin is sending additional data named as `action` with a value of `next` and `last_id` with the value of the last data-value inserted in the DOM.\r\n\r\nNormally you would do something like this in your API if you will use this:\r\n```\r\nif($request->action == 'next'){\r\n    $foods = Food::where('id', '>', $request->last_id)->first();\r\n}\r\n```\r\n\r\n## Changelog:\r\n\r\nVersion 2\r\n- added `slideBy` option\r\n- added `pending` list internally.\r\n- added `toggle` method\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}